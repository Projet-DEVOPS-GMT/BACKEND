plugins {
    id 'java'
    id 'application'
    id 'jacoco'
    id 'org.sonarqube' version '5.1.0.4882'
    id 'org.asciidoctor.jvm.convert' version '4.0.2'
    id 'org.asciidoctor.jvm.pdf' version '4.0.2'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
}

asciidoctor {
    sourceDir = file('src/docs/asciidoc')
    outputDir = file("${buildDir}/docs/asciidoc")
}

asciidoctorPdf {
    sourceDir = file('src/docs/asciidoc')
    outputDir = file("${buildDir}/docs/asciidoc")
}

asciidoctorj {
    requires 'rouge'
    modules {
        diagram.use()
        diagram.version '1.5.16'
    }
    attributes(
        'build-gradle': file('build.gradle'),
        'sourcedir': project.sourceSets.main.java.srcDirs[0],
        'source-highlighter': 'rouge',
        'rouge-style': 'github',
        'rouge-theme': 'github'
    )
}

sonar {
    properties {
        property "sonar.projectKey", "Projet-DEVOPS-GMT_BACKEND"
        property "sonar.organization", "projet-devops-gmt"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

jacoco {
    toolVersion = "0.8.12"
}

jacocoTestReport {
    reports {
        xml.required.set(true)
        html.required.set(true)
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web:3.3.3'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.security:spring-security-crypto:6.4.1'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'mysql:mysql-connector-java:8.0.33'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.3.3'
    testImplementation 'org.mockito:mockito-core'
}

group = 'fr.parisnanterre.ProjetDEVOPSGMT'
version = '0.0.3'

application {
    mainClass = 'fr.parisnanterre.ProjetDEVOPSGMT.backend.App'
}

tasks.named('asciidoctor').configure {
    dependsOn tasks.named('asciidoctorPdf')
}

tasks.named('build').configure {
    dependsOn tasks.named('asciidoctor')
}
