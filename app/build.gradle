/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'application'
    id 'jacoco'
    id ("org.sonarqube" )version "5.1.0.4882"
    // for generate doc
    id 'org.asciidoctor.jvm.convert' version '4.0.2'
    id 'org.asciidoctor.jvm.pdf' version '4.0.2'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'

}

asciidoctor {
    sourceDir = file('src/docs/asciidoc')
    outputDir = file("${buildDir}/docs/asciidoc")
}
asciidoctorPdf {
    sourceDir = file('src/docs/asciidoc')
    outputDir = file("${buildDir}/docs/asciidoc")
}
asciidoctorj {
    requires 'rouge'
    modules {
        diagram.use()
        diagram.version '1.5.16'
    }
    attributes 'build-gradle': file('build.gradle'),
        'sourcedir': project.sourceSets.main.java.srcDirs[0],
        'source-highlighter': 'rouge',
        'rouge-style': 'github',
        'rouge-theme': 'github'
        
}
sonar {
    properties {
        property "sonar.projectKey", "Projet-DEVOPS-GMT_BACKEND"
        property "sonar.organization", "projet-devops-gmt"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}
jacoco {
    toolVersion = "0.8.12" // JaCoCo version
}

jacocoTestReport {
    reports {
        xml.required.set(true) // Necessary for badge services to read reports
        html.required.set(true)
    }
}

test {
     useJUnitPlatform()
   
    finalizedBy jacocoTestReport // Generates JaCoCo report after testing
}

repositories {  // Claire : les sources de librairies
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    // Ibtissem : Ajouter un repo gituhb pour inclure des dépendances pas disponible sur maven
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web:3.3.3'  //creation de la librairie pour l'api 
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2' // claire: Junit c'est ce qu'on a besoin pas guava
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.3.3'
  
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'mysql:mysql-connector-java:8.0.33'
 
	compileOnly 'org.projectlombok:lombok'

	annotationProcessor 'org.projectlombok:lombok'
 

//	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
   
}

/*
Ibtissem : Si présent dans le fichier, cela indique la version Java a utilisé pour executer le projet gradle.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}
*/
group='fr.parisnanterre.ProjetDEVOPSGMT'
version='0.0.1'
application {
    // Define the main class for the application.
    mainClass ='fr.parisnanterre.ProjetDEVOPSGMT.backend.App'
}
tasks.named('asciidoctor').configure{
    dependsOn tasks.named('asciidoctorPdf')
}
tasks.named('build').configure{
    dependsOn tasks.named('asciidoctor')
}