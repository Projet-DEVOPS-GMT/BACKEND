name: Java CI Gradle build and test

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpassword
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u root -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

   teps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Wait for MySQL to be ready
        run: sleep 20s

      - name: Build with Gradle Wrapper
        run: ./gradlew build
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/testdb?serverTimezone=UTC&useSSL=false
          SPRING_DATASOURCE_USERNAME: testuser
          SPRING_DATASOURCE_PASSWORD: testpassword
        # Utilise application-test.yml pendant les tests
        # Si tu utilises Spring Profiles, tu peux ajouter ceci :
        # SPRING_PROFILES_ACTIVE: test

      - name: Run tests
        run: ./gradlew test
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/testdb?serverTimezone=UTC&useSSL=false
          SPRING_DATASOURCE_USERNAME: testuser
          SPRING_DATASOURCE_PASSWORD: testpassword
        # Assurez-vous que le profile "test" est activé si nécessaire
        # SPRING_PROFILES_ACTIVE: test